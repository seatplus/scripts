version: "3.7"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  redis:
    driver: local
  mariadb:
    driver: local

services:

### MariaDB ##############################################
  mariadb:
    image: mariadb:10.3
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backend

### Redis ################################################
  redis:
    image: redis:5-alpine
    #command: redis-server --appendonly yes
    restart: always
    ports:
      - "6379:6379"
    volumes:
    - "redis:/data"
    networks:
    - backend

### seat-plus ################################################
  seat-plus:
    build: .docker/app
    restart: always
    volumes:
      - ${CODE}:/var/www/
    depends_on:
      - mariadb
      - redis
      - selenium
    environment:
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - backend

### nginx ################################################
  nginx:
    image: nginx:1.13-alpine
    restart: always
    environment:
      - NGINX_HOST=${NGINX_HOST}
    volumes:
      - ${CODE}/public:/var/www/public
      - ./.docker/nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      # Remove the comment below to enable nginx logs to disk.
      #- ./logs/nginx/:/var/log/nginx/
    ports:
      - "${NGINX_HTTP}:80"
      - "${NGINX_HTTPS}:443"
    depends_on:
      - seat-plus
    command: /bin/sh -c "envsubst '${NGINX_HOST}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    networks:
      - backend
      - frontend

### worker ################################################
  worker:
    build: .docker/worker
    restart: always
    environment:
      - NGINX_HOST=${NGINX_HOST}
    volumes:
      - ${CODE}:/var/www
    depends_on:
      - seat-plus
      - mariadb
      - redis
    networks:
      - backend

### cron ################################################
  cron:
    build: .docker/worker
    restart: always
    volumes:
      - ${CODE}:/var/www
    depends_on:
      - seat-plus
      - mariadb
      - redis
    environment:
      CONTAINER_ROLE: cron
    networks:
      - backend

### selenium ##########################################
  selenium:
    image: 'selenium/standalone-chrome'
    volumes:
      - '/dev/shm:/dev/shm'
    networks:
      - backend
