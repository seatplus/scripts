version: "3.7"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  redis:
    driver: local
  mariadb:
    driver: local

services:

### MariaDB ##############################################
  mariadb:
    image: mariadb:10.3
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backend

### Redis ################################################
  redis:
    image: redis:5-alpine
    command: redis-server --appendonly yes
    restart: always
    volumes:
    - "redis:/data"
    networks:
    - backend

### php-fpm ################################################
#  php-fpm:
#    build:
#      context: ./.docker/php-fpm
#    restart: always
#    volumes:
#      - ${CODE}:/var/www/
#    depends_on:
#      - mariadb
#      - redis
#    networks:
#      - backend

### seat-plus ################################################
  seat-plus:
    build: .docker/app
    restart: always
    volumes:
      - ${CODE}:/var/www/
    depends_on:
      - mariadb
      - redis
    environment:
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
    networks:
      - backend

### nginx ################################################
  nginx:
    image: nginx:1.13-alpine
    restart: always
    environment:
      - NGINX_HOST=${NGINX_HOST}
    volumes:
      - ${CODE}/public:/var/www/public
      - ./.docker/nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      # Remove the comment below to enable nginx logs to disk.
      #- ./logs/nginx/:/var/log/nginx/
    ports:
      - "${NGINX_HTTP}:80"
      - "${NGINX_HTTPS}:443"
    depends_on:
      - seat-plus
    command: /bin/sh -c "envsubst '${NGINX_HOST}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    networks:
      - backend
      - frontend


### Old ###
#services:
#
#
#
#  nginx:
#    image: nginx:1.15-alpine #was 1.13
#    depends_on:
#    - seatplus-app
#    container_name: seat-nginx
#    restart: always
#    environment:
#    - NGINX_HOST=${NGINX_HOST}
#    volumes:
#    - ${SEAT_CODE}/public:/var/www/seat/public
#    - ./config/nginx.conf.template:/etc/nginx/nginx.conf.template
#    # Remove the comment below to enable nginx logs to disk.
#    #- ./logs/nginx/:/var/log/nginx/
#    ports:
#    - "${NGINX_HTTP}:80"
#    - "${NGINX_HTTPS}:443"
#    command: /bin/sh -c "envsubst '${NGINX_HOST}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
#    networks:
#    - seatplus-network
#
#  seat-app:
#    build:
#      context: ./eveseat-app
#    image: seat-app
#    container_name: seat-app
#    restart: always
#    environment:
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#    volumes:
#    - ${SEAT_CODE}:/var/www/seat
#    depends_on:
#    - mariadb
#    - redis
#    networks:
#    - seatplus-network

#  seat-worker:
#    build:
#      context: ./eveseat-worker
#    image: eveseat-worker
#    container_name: seat-worker
#    restart: always
#    volumes:
#    - ${SEAT_CODE}:/var/www/seat
#    depends_on:
#    - seat-app # so that we can get composer installed
#    - mariadb
#    - redis
#    networks:
#    - seatplus-network